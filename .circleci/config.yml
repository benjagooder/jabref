version: 2

jobs:
  downloadinstall4j:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/download-install4j-and-jres.sh
      - save_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
          paths:
            - "~/downloads"
            - "~/.install4j7"
    filters:
      tags:
        only: /.*/

  buildDev:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - restore_cache:
          key: dependency-cache
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/extract-install4j.sh
      - run: install4j7/bin/install4jc --verbose --license=$INSTALL4J_KEY
      - run: ./gradlew -Pdev=true -Pinstall4jDir="install4j7" releaseJar --stacktrace
      - save_cache:
          key: dependency-cache
          paths:
            - "~/.gradle"
      - store_artifacts:
          path: build/releases
          destination: build
      - store_test_results:
          path: src/test-results

  buildRelease:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - restore_cache:
          key: dependency-cache
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/extract-install4j.sh
      - run: install4j7/bin/install4jc --verbose --license=$INSTALL4J_KEY
      - run: ./gradlew -Pinstall4jDir="install4j7" release --stacktrace
      - store_artifacts:
          path: build/releases
          destination: release
    filters:
      tags:
        only: /.*/

workflows:
  version: 2
  build:
    docker:
      - image: circleci/openjdk:11.0-stretch-node-browsers-legacy
      steps:
        - checkout
        - run: mvn test
        - store_artifacts:
            path:  target
    jobs:
      - downloadinstall4j
      - buildDev:
          requires:
            - downloadinstall4j
      - buildRelease:
          requires:
            - downloadinstall4j
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

